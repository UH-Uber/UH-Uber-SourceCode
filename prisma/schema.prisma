generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  password       String
  role           Role          @default(USER)
  avatarUrl      String?
  bio            String?
  campusLocation String?
  createdAt      DateTime      @default(now())
  name           String?
  phone          String?
  pronouns       String?
  updatedAt      DateTime      @updatedAt
  offeredRides   Ride[]        @relation("DriverRides")
  bookedRides    RideBooking[]
}

model Ride {
  id             Int           @id @default(autoincrement())
  driverId       Int
  startLocation  String
  endLocation    String
  departureTime  DateTime
  availableSeats Int
  status         RideStatus    @default(PENDING)
  description    String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  driver         User          @relation("DriverRides", fields: [driverId], references: [id])
  bookings       RideBooking[]

  @@index([driverId])
}

model RideBooking {
  id          Int        @id @default(autoincrement())
  rideId      Int
  passengerId Int
  status      RideStatus @default(PENDING)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  passenger   User       @relation(fields: [passengerId], references: [id])
  ride        Ride       @relation(fields: [rideId], references: [id])

  @@unique([rideId, passengerId])
  @@index([rideId])
  @@index([passengerId])
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition
  owner     String
}

enum Role {
  USER
  ADMIN
}

enum RideStatus {
  PENDING
  ACTIVE
  COMPLETED
  CANCELLED
}

enum Condition {
  excellent
  good
  fair
  poor
}
